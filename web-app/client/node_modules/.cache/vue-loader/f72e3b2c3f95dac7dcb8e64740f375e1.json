{"remainingRequest":"E:\\IBM_EVote\\web-app\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\IBM_EVote\\web-app\\client\\src\\components\\QueryWithQueryString.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\IBM_EVote\\web-app\\client\\src\\components\\QueryWithQueryString.vue","mtime":1611082872000},{"path":"E:\\IBM_EVote\\web-app\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\IBM_EVote\\web-app\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PostsService from \"@/services/apiService\";\nimport VueInstantLoadingSpinner from \"vue-instant-loading-spinner/src/components/VueInstantLoadingSpinner.vue\";\n\nexport default {\n  name: \"response\",\n  data() {\n    return {\n      selected: {\n        data: \"\"\n      },\n      response: null\n    };\n  },\n  components: {\n    VueInstantLoadingSpinner\n  },\n  methods: {\n    async queryByQueryString(selected) {\n      this.response = null;\n      this.runSpinner();\n \n      //check to make sure the user selected something\n      if (this.selected != 'ballot' && this.selected != 'election' \n        && this.selected!= 'voter' && this.selected != 'votableItem') {\n\n        console.log('this . selectionesdfsdfds')\n        let result = `Please select a type of object!`;\n        this.response = result;\n        this.hideSpinner();\n\n      } else {\n        const apiResponse = await PostsService.queryWithQueryString(\n        this.selected\n      );\n      this.response = apiResponse.data;\n\n      console.log(\"query by object type called\");\n      this.hideSpinner();\n      }\n      \n    },\n    async runSpinner() {\n      this.$refs.Spinner.show();\n    },\n    async hideSpinner() {\n      this.$refs.Spinner.hide();\n    }\n  }\n};\n",{"version":3,"sources":["QueryWithQueryString.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QueryWithQueryString.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"posts\">\n    <h1>Select the type of object to query for</h1>\n    <select v-model=\"selected\">\n      <option disabled value>Please select one</option>\n      <option>ballot</option>\n      <option>election</option>\n      <option>votableItem</option>\n      <option>voter</option>\n    </select>\n    <br>\n\n    <br>\n\n    <button v-on:click=\"queryByQueryString()\">Query the world State</button>\n\n    <br>\n    <br>\n    <br>\n    <span v-if=\"response\">\n      <b>{{ response }}</b>\n    </span>\n    <br>\n    <vue-instant-loading-spinner id='loader' ref=\"Spinner\"></vue-instant-loading-spinner>\n  </div>\n</template>\n\n<script>\nimport PostsService from \"@/services/apiService\";\nimport VueInstantLoadingSpinner from \"vue-instant-loading-spinner/src/components/VueInstantLoadingSpinner.vue\";\n\nexport default {\n  name: \"response\",\n  data() {\n    return {\n      selected: {\n        data: \"\"\n      },\n      response: null\n    };\n  },\n  components: {\n    VueInstantLoadingSpinner\n  },\n  methods: {\n    async queryByQueryString(selected) {\n      this.response = null;\n      this.runSpinner();\n \n      //check to make sure the user selected something\n      if (this.selected != 'ballot' && this.selected != 'election' \n        && this.selected!= 'voter' && this.selected != 'votableItem') {\n\n        console.log('this . selectionesdfsdfds')\n        let result = `Please select a type of object!`;\n        this.response = result;\n        this.hideSpinner();\n\n      } else {\n        const apiResponse = await PostsService.queryWithQueryString(\n        this.selected\n      );\n      this.response = apiResponse.data;\n\n      console.log(\"query by object type called\");\n      this.hideSpinner();\n      }\n      \n    },\n    async runSpinner() {\n      this.$refs.Spinner.show();\n    },\n    async hideSpinner() {\n      this.$refs.Spinner.hide();\n    }\n  }\n};\n</script>\n"]}]}
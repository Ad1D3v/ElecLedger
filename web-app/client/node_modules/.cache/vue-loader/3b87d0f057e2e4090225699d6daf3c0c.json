{"remainingRequest":"E:\\IBM_EVote\\web-app\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\IBM_EVote\\web-app\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\IBM_EVote\\web-app\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\IBM_EVote\\web-app\\client\\src\\components\\Home.vue?vue&type=template&id=8dc7cce2&","dependencies":[{"path":"E:\\IBM_EVote\\web-app\\client\\src\\components\\Home.vue","mtime":1629485069963},{"path":"E:\\IBM_EVote\\web-app\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\IBM_EVote\\web-app\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\IBM_EVote\\web-app\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\IBM_EVote\\web-app\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"posts\" },\n    [\n      _c(\"h1\", [_vm._v(\"2020 Maharashtra Legislative Assembly Election\")]),\n      _c(\"h3\", [\n        _vm._v(\"If you are a registered voter, enter your voterId below\")\n      ]),\n      _c(\"form\", { on: { submit: _vm.validateVoter } }, [\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.loginData.voterId,\n              expression: \"loginData.voterId\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"Enter VoterId\" },\n          domProps: { value: _vm.loginData.voterId },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(_vm.loginData, \"voterId\", $event.target.value)\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\"input\", { attrs: { type: \"submit\", value: \"Login\" } }),\n        _c(\"br\"),\n        _c(\"br\"),\n        _vm.loginReponse\n          ? _c(\"span\", [_c(\"b\", [_vm._v(_vm._s(_vm.loginReponse.data))])])\n          : _vm._e(),\n        _c(\"br\")\n      ]),\n      _c(\"br\"),\n      _c(\"h3\", [_vm._v(\"Otherwise, fill out the form below to register!\")]),\n      _c(\"form\", { on: { submit: _vm.registerVoter } }, [\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.registerData.voterId,\n              expression: \"registerData.voterId\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"Enter Drivers License\" },\n          domProps: { value: _vm.registerData.voterId },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(_vm.registerData, \"voterId\", $event.target.value)\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.registerData.registrarId,\n              expression: \"registerData.registrarId\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"Enter Registrar ID\" },\n          domProps: { value: _vm.registerData.registrarId },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(_vm.registerData, \"registrarId\", $event.target.value)\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.registerData.firstName,\n              expression: \"registerData.firstName\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"Enter first name\" },\n          domProps: { value: _vm.registerData.firstName },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(_vm.registerData, \"firstName\", $event.target.value)\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.registerData.lastName,\n              expression: \"registerData.lastName\"\n            }\n          ],\n          attrs: { type: \"text\", placeholder: \"Enter last name\" },\n          domProps: { value: _vm.registerData.lastName },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(_vm.registerData, \"lastName\", $event.target.value)\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\"input\", { attrs: { type: \"submit\", value: \"Register\" } })\n      ]),\n      _c(\"br\"),\n      _vm.registerReponse\n        ? _c(\"span\", [_c(\"b\", [_vm._v(_vm._s(_vm.registerReponse.data))])])\n        : _vm._e(),\n      _c(\"br\"),\n      _c(\"vue-instant-loading-spinner\", {\n        ref: \"Spinner\",\n        attrs: { id: \"loader\" }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
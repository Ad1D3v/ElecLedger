{"remainingRequest":"E:\\IBM_EVote\\web-app\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\IBM_EVote\\web-app\\client\\src\\components\\GetCurrentStanding.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\IBM_EVote\\web-app\\client\\src\\components\\GetCurrentStanding.vue","mtime":1629484433006},{"path":"E:\\IBM_EVote\\web-app\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\IBM_EVote\\web-app\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PostsService from \"@/services/apiService\";\nimport VueInstantLoadingSpinner from \"vue-instant-loading-spinner/src/components/VueInstantLoadingSpinner.vue\";\nimport { Bar } from \"vue-chartjs\";\n\nexport default {\n  extends: Bar,\n  name: \"response\",\n  data() {\n    return {\n      response: null,\n      chartOptionsBar: {}\n    };\n  },\n  components: {\n    VueInstantLoadingSpinner\n  },\n  methods: {\n    async getCurrentStanding() {\n      this.response = null;\n      \n      this.runSpinner();\n\n      // console.log(`this.selected ${this.selected}`);\n      const apiResponse = await PostsService.getCurrentStanding();\n      console.log(\"%%%%%%%%%%%%%%%%%%%%%%%%%\");\n      console.log(apiResponse);\n      console.log(apiResponse.data[0].Record);\n      let currentStanding = [];\n      for (let i = 0; i < apiResponse.data.length; i++) {\n        currentStanding[i] = apiResponse.data[i].Record.count;\n      }\n      console.log(\"curStanding: \");\n      console.log(currentStanding);\n\n      this.chartOptionsBar = {\n        xAxis: {\n          data: [\n            \"BJP\",\n            \"INC\",\n            \"MNS\",\n            \"NCP\",\n            \"SHS\"\n          ]\n        },\n        yAxis: {\n          type: \"value\"\n        },\n        series: [\n          {\n            type: \"bar\",\n            data: currentStanding\n          }\n        ],\n        title: {\n          text: \"2020 \",\n          x: \"center\",\n          textStyle: {\n            fontSize: 24\n          }\n        },\n        color: [\"#127ac2\"]\n      };\n      // this.response = apiResponse.data;\n      // this.renderChart(this.datacollection, this.options)\n      this.hideSpinner();\n    },\n    async runSpinner() {\n      this.$refs.Spinner.show();\n    },\n    async hideSpinner() {\n      this.$refs.Spinner.hide();\n    }\n  }\n};\n",{"version":3,"sources":["GetCurrentStanding.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GetCurrentStanding.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"posts\">\n    <h1>Get the Current Poll Standings</h1>\n\n    <button v-on:click=\"getCurrentStanding()\">Check Poll</button>\n\n    <br>\n    <span v-if=\"response\">\n      <b>{{ response }}</b>\n    </span>\n    <br>\n    <vue-instant-loading-spinner id='loader' ref=\"Spinner\"></vue-instant-loading-spinner>\n    <div class=\"chart-wrapper\">\n      <chart :options=\"chartOptionsBar\"></chart>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostsService from \"@/services/apiService\";\nimport VueInstantLoadingSpinner from \"vue-instant-loading-spinner/src/components/VueInstantLoadingSpinner.vue\";\nimport { Bar } from \"vue-chartjs\";\n\nexport default {\n  extends: Bar,\n  name: \"response\",\n  data() {\n    return {\n      response: null,\n      chartOptionsBar: {}\n    };\n  },\n  components: {\n    VueInstantLoadingSpinner\n  },\n  methods: {\n    async getCurrentStanding() {\n      this.response = null;\n      \n      this.runSpinner();\n\n      // console.log(`this.selected ${this.selected}`);\n      const apiResponse = await PostsService.getCurrentStanding();\n      console.log(\"%%%%%%%%%%%%%%%%%%%%%%%%%\");\n      console.log(apiResponse);\n      console.log(apiResponse.data[0].Record);\n      let currentStanding = [];\n      for (let i = 0; i < apiResponse.data.length; i++) {\n        currentStanding[i] = apiResponse.data[i].Record.count;\n      }\n      console.log(\"curStanding: \");\n      console.log(currentStanding);\n\n      this.chartOptionsBar = {\n        xAxis: {\n          data: [\n            \"BJP\",\n            \"INC\",\n            \"MNS\",\n            \"NCP\",\n            \"SHS\"\n          ]\n        },\n        yAxis: {\n          type: \"value\"\n        },\n        series: [\n          {\n            type: \"bar\",\n            data: currentStanding\n          }\n        ],\n        title: {\n          text: \"2020 \",\n          x: \"center\",\n          textStyle: {\n            fontSize: 24\n          }\n        },\n        color: [\"#127ac2\"]\n      };\n      // this.response = apiResponse.data;\n      // this.renderChart(this.datacollection, this.options)\n      this.hideSpinner();\n    },\n    async runSpinner() {\n      this.$refs.Spinner.show();\n    },\n    async hideSpinner() {\n      this.$refs.Spinner.hide();\n    }\n  }\n};\n</script>\n"]}]}
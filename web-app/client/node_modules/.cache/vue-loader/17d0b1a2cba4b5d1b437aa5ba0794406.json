{"remainingRequest":"E:\\IBM_EVote\\web-app\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\IBM_EVote\\web-app\\client\\src\\components\\CastBallot.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\IBM_EVote\\web-app\\client\\src\\components\\CastBallot.vue","mtime":1629461335794},{"path":"E:\\IBM_EVote\\web-app\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\IBM_EVote\\web-app\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PostsService from \"@/services/apiService\";\nimport VueInstantLoadingSpinner from \"vue-instant-loading-spinner/src/components/VueInstantLoadingSpinner.vue\";\n\nexport default {\n  name: \"response\",\n  data() {\n    return {\n      input: {},\n      picked: null,\n      response: null\n    };\n  },\n  components: {\n    VueInstantLoadingSpinner\n  },\n  methods: {\n    async castBallot() {\n      await this.runSpinner();\n\n      const electionRes = await PostsService.queryWithQueryString('election');\n\n      let electionId = electionRes.data[0].Key;\n\n      console.log(\"picked: \");\n      console.log(this.picked);\n      console.log(\"voterId: \");\n      console.log(this.input.voterId);\n      this.response = null;\n\n \n\n      //error checking for making sure to vote for a valid party\n      if (this.picked === null ) {\n        console.log('this.picked === null')\n\n        let response = \"You have to pick a party to vote for!\";\n        this.response = response;\n        await this.hideSpinner();\n      \n      } else if (this.input.voterId === undefined) {\n        console.log('this.voterId === undefined')\n\n        let response = \"You have to enter your voterId to cast a vote!\";\n        this.response = response;\n        await this.hideSpinner();\n\n      } else {\n\n        const apiResponse = await PostsService.castBallot(\n          electionId,\n          this.input.voterId,\n          this.picked\n        );\n\n        console.log('apiResponse: &&&&&&&&&&&&&&&&&&&&&&&');\n        console.log(apiResponse);\n\n        if (apiResponse.data.error) {\n          this.response= apiResponse.data.error;\n          await this.hideSpinner();\n        } else if (apiResponse.data.message) {\n          this.response= `Could not find voter with voterId ${this.input.voterId}\n            in the state. Make sure you are entering a valid voterId`;\n          await this.hideSpinner();\n        } \n        else {\n          let response = `Successfully recorded vote for ${this.picked} party \n            for voter with voterId ${apiResponse.data.voterId}. Thanks for \n            doing your part and voting!`;\n\n          this.response = response;\n\n          console.log(\"cast ballot\");\n          console.log(this.input);\n          await this.hideSpinner();\n        }\n      }\n    },\n    async runSpinner() {\n      this.$refs.Spinner.show();\n    },\n    async hideSpinner() {\n      this.$refs.Spinner.hide();\n    }\n  }\n};\n",{"version":3,"sources":["CastBallot.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CastBallot.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"posts\">\n    <h1>Cast Ballot</h1>\n    <input type=\"radio\" id=\"one\" value=\"INC\" v-model=\"picked\">\n    <label for=\"one\">Balasaheb Thorat (INC)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"BJP\" v-model=\"picked\">\n    <label for=\"two\">Devendra Fadnavis (BJP)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"NCP\" v-model=\"picked\">\n    <label for=\"two\">Ajit Pawar (NCP)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"SHS\" v-model=\"picked\">\n    <label for=\"two\">Uddhav Thackeray (SHS)</label>\n    <br>\n    <input type=\"radio\" id=\"two\" value=\"MNS\" v-model=\"picked\">\n    <label for=\"two\">Raj Thackeray (MNS)</label>\n    <br>\n    <br>\n    <span v-if=\"picked\">\n      Picked:\n      <b>{{ picked }}</b>\n    </span>\n    <br>\n    <br>\n    <!--span><b>{{ response }}</b></span><br /-->\n    <form v-on:submit=\"castBallot\">\n      <!-- <input type=\"text\" value=\"2sww593dc034wb2twdk91r\" v-model=\"input.electionId\"  >\n      <br>-->\n      <input type=\"text\" v-model=\"input.voterId\" placeholder=\"Enter VoterId\">\n      <br>\n      <input type=\"submit\" value=\"Cast Vote\">\n      <br>\n    </form>\n\n    <br>\n    <span v-if=\"response\">\n      <b>{{ response }}</b>\n    </span>\n    <br>\n    <vue-instant-loading-spinner id=\"loader\" ref=\"Spinner\"></vue-instant-loading-spinner>\n  </div>\n</template>\n\n<script>\nimport PostsService from \"@/services/apiService\";\nimport VueInstantLoadingSpinner from \"vue-instant-loading-spinner/src/components/VueInstantLoadingSpinner.vue\";\n\nexport default {\n  name: \"response\",\n  data() {\n    return {\n      input: {},\n      picked: null,\n      response: null\n    };\n  },\n  components: {\n    VueInstantLoadingSpinner\n  },\n  methods: {\n    async castBallot() {\n      await this.runSpinner();\n\n      const electionRes = await PostsService.queryWithQueryString('election');\n\n      let electionId = electionRes.data[0].Key;\n\n      console.log(\"picked: \");\n      console.log(this.picked);\n      console.log(\"voterId: \");\n      console.log(this.input.voterId);\n      this.response = null;\n\n \n\n      //error checking for making sure to vote for a valid party\n      if (this.picked === null ) {\n        console.log('this.picked === null')\n\n        let response = \"You have to pick a party to vote for!\";\n        this.response = response;\n        await this.hideSpinner();\n      \n      } else if (this.input.voterId === undefined) {\n        console.log('this.voterId === undefined')\n\n        let response = \"You have to enter your voterId to cast a vote!\";\n        this.response = response;\n        await this.hideSpinner();\n\n      } else {\n\n        const apiResponse = await PostsService.castBallot(\n          electionId,\n          this.input.voterId,\n          this.picked\n        );\n\n        console.log('apiResponse: &&&&&&&&&&&&&&&&&&&&&&&');\n        console.log(apiResponse);\n\n        if (apiResponse.data.error) {\n          this.response= apiResponse.data.error;\n          await this.hideSpinner();\n        } else if (apiResponse.data.message) {\n          this.response= `Could not find voter with voterId ${this.input.voterId}\n            in the state. Make sure you are entering a valid voterId`;\n          await this.hideSpinner();\n        } \n        else {\n          let response = `Successfully recorded vote for ${this.picked} party \n            for voter with voterId ${apiResponse.data.voterId}. Thanks for \n            doing your part and voting!`;\n\n          this.response = response;\n\n          console.log(\"cast ballot\");\n          console.log(this.input);\n          await this.hideSpinner();\n        }\n      }\n    },\n    async runSpinner() {\n      this.$refs.Spinner.show();\n    },\n    async hideSpinner() {\n      this.$refs.Spinner.hide();\n    }\n  }\n};\n</script>\n"]}]}